# -*- coding: utf-8 -*-
# MLC (Machine Learning Control): A genetic algorithm library to solve chaotic problems
# Copyright (C) 2015-2017, Thomas Duriez (thomas.duriez@gmail.com)
# Copyright (C) 2015, Adrian Durán (adrianmdu@gmail.com)
# Copyright (C) 2015-2017, Ezequiel Torres Feyuk (ezequiel.torresfeyuk@gmail.com)
# Copyright (C) 2016-2017, Marco Germano Zbrun (marco.germano@intraway.com)
# Copyright (C) 2016-2017, Raúl Lopez Skuba (raulopez0@gmail.com)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QDialog
from ArduinoBoardDialog import ArduinoBoardDialog
from MLC.GUI.Autogenerated.autogenerated import Ui_BoardConfigurationWindow
from MLC.GUI.Experiment.ArduinoConfigManager.BoardConfigurationWindow import BoardConfigurationWindow
from MLC.arduino.protocol import ProtocolConfig
from MLC.arduino.connection.serialconnection import SerialConnectionConfig


from ArduinoBoardManager import ArduinoBoardManager


def showPinout():
    dialog = ArduinoBoardDialog("images/uno.jpg")
    dialog.exec_()
#   window = QDialog()
#   ui = Ui_BoardPinout()
#   ui.setupUi(window)
#   window.exec_()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    # window = BoardConfigurationWindow()
    protocol_cfg = ProtocolConfig(None)
    connection_cfg = SerialConnectionConfig('/dev/ttyACM0')
    manager = ArduinoBoardManager(protocol_cfg, connection_cfg)
    # ui = Ui_BoardConfigurationFrame()
    # ui.setupUi(window)
    # ui.showPinout.clicked.connect(showPinout)

    manager.start()
    app.exec_()

    manager = ArduinoBoardManager(protocol_cfg, connection_cfg)
    manager.start()
    app.exec_()
