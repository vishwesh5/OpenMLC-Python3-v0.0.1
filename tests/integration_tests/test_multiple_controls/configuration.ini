[LOGGING]
logmode = testing

[POPULATION]
# Population size. This paramater can be a number or a numpy array
size = 100
sensors = 1
sensor_spec = false
sensor_list = 1,5,2,4
controls = 3
sensor_prob = 0.33
leaf_prob = 0.3
range = 10
precision = 4
# Numpy arrange
opsetrange = 1:10
formal = 1
end_character =
individual_type = tree

[GP]
# GP algortihm (CHANGE IF YOU KNOW WHAT YOU DO)
maxdepth = 15
maxdepthfirst = 5
mindepth = 2
mutmindepth = 2
mutmaxdepth = 15
mutsubtreemindepth = 2
generation_method = mixed_ramped_gauss
gaussigma = 3
# Numpy arange
ramp = 2:9
maxtries = 10
mutation_types = 1:5

[OPTIMIZATION]
#  Optimization parameters
elitism = 10
probrep = 0.25
probmut = 0.0
probcro = 0.75
selectionmethod = tournament
tournamentsize = 7
lookforduplicates = true
simplify = false
# Numpy array
cascade = 1,1

[EVALUATOR]
#  Evaluator
# evaluation_method = standalone_function
# evaluation_method = standalone_files
evaluation_method = mfile_standalone
evaluation_function = default_evaluation_script
# evaluation_function = arduino
indfile = ind.dat
Jfile = J.dat
# exchangedir = fullfile(pwd,evaluator0)
evaluate_all = 0
ev_again_best = false
ev_again_nb = 5
ev_again_times = 5
artificialnoise = 0
execute_before_evaluation =
badvalue = 1e36
badvalues_elim = first
%badvalues_elim = none
%badvalues_elim = all
preevaluation = false
preev_function = default_preevaluation_script
problem_variables.gamma = 0.1

[BEHAVIOUR]
## MLC behaviour
verbose = 2
fgen = 250
stopongraph = false
showeveryitbest = true
save = 1
saveincomplete = 1
savedir = test_multiple_controls.db

[ARDUINO]
baudrate = 115200
port= /dev/ttyACM0
command_opcode = 1
# Time in microseconds
wait_period = 10000
# Time in seconds
read_timeout = 5.0
read_retries = 2
